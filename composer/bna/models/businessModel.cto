/**
 * Digital CMR business network definition.
 */

namespace org.digitalcmr

/**
 * Assets TransportOrder, ECMR and Vehicle
 */

asset TransportOrder identified by orderID {
  o String orderID
  --> LegalOwnerOrg owner
  --> CompoundOrg source
  --> CarrierOrg carrier
  o Good[] goods
  o OrderStatus status
  o Integer issueDate
  --> ECMR[] ecmrs
  o String orderRef
  o Cancellation cancellation optional
}

asset ECMR identified by ecmrID {
  o String ecmrID
  o String agreementTerms
  o String agreementTermsSec
  o String legalOwnerRef
  o String carrierRef
  o String recipientRef
  o Integer issueDate
  --> Entity issuedBy
  --> LegalOwnerOrg owner
  --> CompoundOrg source
  --> CarrierOrg carrier
  --> RecipientOrg recipientOrg
  o String carrierComments
  o Loading loading
  o Delivery delivery
  o String[] documents optional
  o Good[] goods
  o String legalOwnerInstructions
  o String paymentInstructions
  o Creation creation
  o String payOnDelivery
  o Signature compoundSignature optional
  o Signature carrierLoadingSignature optional
  o Signature carrierDeliverySignature optional
  o Signature recipientSignature optional
  o EcmrStatus status
  o String orderID
  o Cancellation cancellation optional
  --> CarrierMember transporter optional
  --> RecipientMember recipient optional
}

abstract asset Entity identified by entityID {
  o String entityID
  o String name
  o Address address
}

asset LegalOwnerOrg extends Entity {
}

asset CompoundOrg extends Entity {
}

asset CarrierOrg extends Entity {
}

asset RecipientOrg extends Entity {
}

asset Vehicle identified by vin {
  o String vin
  o String manufacturer
  o String model
  o String type
  --> ECMR[] ecmrs
  o Integer odoMeterReading
  o String plateNumber
  o String registrationCountry optional
}

/**
 * Participants
 */

abstract participant User identified by userID {
  o String userID
  o String userName
  o String firstName
  o String lastName
  o Address address
}

participant LegalOwnerAdmin extends User {
  --> LegalOwnerOrg org
}

participant CompoundAdmin extends User {
  --> CompoundOrg org
}

participant CarrierAdmin extends User {
  --> CarrierOrg org
}

participant CarrierMember extends User {
  --> CarrierOrg org
}

participant RecipientAdmin extends User {
  --> RecipientOrg org
}

participant RecipientMember extends User {
  --> RecipientOrg org
}

/**
 * Concepts
 */

concept Address {
  o String name
  o String street
  o String houseNumber
  o String city
  o String zipCode
  o String country
  o Double latitude
  o Double longitude
}

concept Delivery {
  o Address address
  o DateWindow expectedWindow optional
  o Integer actualDate optional
}

concept Loading {
  o Address address
  o DateWindow expectedWindow optional
  o Integer actualDate optional
}

concept Creation {
  o Address address
  o Integer date
}

concept Cancellation {
  --> Entity canceledBy
  o Integer date
  o String reason
}

concept Good {
  o Vehicle vehicle
  o Remark carrierLoadingRemark optional
  o Remark compoundRemark optional
  o Remark recipientRemark optional
  o Remark carrierDeliveryRemark optional
  o String description optional
  o Double weight optional
  o Address loadingAddress
  o Address deliveryAddress
  o DateWindow pickupWindow
  o DateWindow deliveryWindow
  o Cancellation cancellation optional
}

concept Remark {
  o String comments
  o Boolean isDamaged optional
}

concept Signature {
  --> User certificate
  o Double latitude optional
  o Double longitude optional
  o String ip optional
  o Integer timestamp
  o Remark generalRemark optional
}

concept DateWindow {
  o Integer startDate
  o Integer endDate
}

/**
 * Transactions
 */

transaction CreateTransportOrder {
  o TransportOrder transportOrder
}

transaction CreateTransportOrders {
  o TransportOrder[] transportOrders
}

transaction UpdateTransportOrder {
  o TransportOrder transportOrder
}

transaction UpdateTransportOrderPickupWindow {
  --> TransportOrder transportOrder
  o DateWindow dateWindow
  o String vin
}

transaction UpdateTransportOrderDeliveryWindow {
  --> TransportOrder transportOrder
  o DateWindow dateWindow
  o String vin
}

transaction CreateECMR {
  o ECMR ecmr
}

transaction CreateLegalOwnerOrg {
  o LegalOwnerOrg legalOwnerOrg
}

transaction CreateCompoundOrg {
  o CompoundOrg compoundOrg
}

transaction CreateCarrierOrg {
  o CarrierOrg carrierOrg
}

transaction CreateRecipientOrg {
  o RecipientOrg recipientOrg
}

transaction CreateVehicles {
  o Vehicle[] vehicles
}

transaction CreateECMRs {
  --> TransportOrder transportOrder
  o ECMR[] ecmrs
}

transaction UpdateECMR {
  --> TransportOrder transportOrder
  o ECMR ecmr
}

transaction UpdateEcmrStatusToLoaded {
  --> TransportOrder transportOrder
  --> ECMR ecmr
  o ECMR updatedEcmr
}

transaction UpdateEcmrStatusToInTransit {
  --> TransportOrder transportOrder
  --> ECMR ecmr
  o ECMR updatedEcmr
}

transaction UpdateExpectedDeliveryWindow {
  --> ECMR ecmr
  o DateWindow expectedWindow
}

transaction UpdateEcmrStatusToDelivered {
  --> TransportOrder transportOrder
  --> ECMR ecmr
  o ECMR updatedEcmr
}

transaction UpdateEcmrStatusToConfirmedDelivered {
  --> TransportOrder transportOrder
  --> ECMR ecmr
  o ECMR updatedEcmr
}

transaction UpdateTransportOrderStatusToCanceled {
  --> TransportOrder transportOrder
}

transaction UpdateRegistrationCountry {
  --> Vehicle vehicle
  o String registrationCountry
}

/**
 * Enums
 */

enum EcmrStatus {
  o CREATED
  o LOADED
  o IN_TRANSIT
  o DELIVERED
  o CONFIRMED_DELIVERED
  o CANCELED
}

enum OrderStatus {
  o OPEN
  o IN_PROGRESS
  o COMPLETED
  o CANCELED
}
