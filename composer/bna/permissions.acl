/**
 * System ACL
 */

 rule SystemACL {
   description:  "System ACL to permit all access"
   participant: "org.hyperledger.composer.system.Participant"
   operation: ALL
   resource: "org.hyperledger.composer.system.**"
   action: ALLOW
 }

/**
 * Digital CMR permission list
 */

 /**
  * Leaseplan permission list
  */
  rule LegalOwnerAdminCanReadAndCreateECMR {
        description: "Allow Legal Owner Admin to CREATE an eCMR"
        participant(p): "org.digitalcmr.LegalOwnerAdmin"
        operation: READ, CREATE
        resource(r): "org.digitalcmr.ECMR"
        condition: (r.owner.getIdentifier() === p.org.getIdentifier())
        action: ALLOW
   }

 rule LegalOwnerAdminCanCreateECMRCreateTransaction {
      description: "Allow Legal Owner Admin to CREATE an eCMR create transaction"
      participant: "org.digitalcmr.LegalOwnerAdmin"
      operation: CREATE
      resource: "org.digitalcmr.CreateECMR"
      action: ALLOW
 }

 rule LegalOwnerAdminCanSubmitCreateECMR {
     description: "Allow Legal Owner Admin to Submit a CREATE eCMR transaction for his organization"
     participant: "org.digitalcmr.LegalOwnerAdmin"
     operation: CREATE
     resource: "org.digitalcmr.ECMR"
     transaction: "org.digitalcmr.CreateECMR"
     action: ALLOW
 }

/**
 * Compound permission list
 */

rule CompoundAdminCanReadECMR {
     description: "Allow Compound Admin to READ all eCMR where his org is a source"
     participant(p): "org.digitalcmr.CompoundAdmin"
     operation: READ
     resource(r): "org.digitalcmr.ECMR"
     condition: (r.source.getIdentifier() === p.org.getIdentifier())
     action: ALLOW
 }

 rule CompoundAdminCanCreateECMRUpdateTransaction {
      description: "Allow Legal Owner Admin to CREATE an eCMR update transaction"
      participant: "org.digitalcmr.CompoundAdmin"
      operation: CREATE
      resource: "org.digitalcmr.UpdateECMR"
      action: ALLOW
 }

 rule CompoundAdminCanSubmitUpdateECMR {
     description: "Allow CompoundAdmin to Submit a Update eCMR transaction for his organization and status LOADED"
     participant(p): "org.digitalcmr.CompoundAdmin"
     operation: UPDATE
     resource(r): "org.digitalcmr.ECMR"
     transaction(tx): "org.digitalcmr.UpdateECMR"
     condition: (r.source.getIdentifier() === p.org.getIdentifier() && tx.ecmr.status == "LOADED")
     action: ALLOW
 }

/**
   * Carrier permission list
   */

 rule CarrierAdminCanReadECMR {
     description: "Allow Carrier Admin to READ all eCMR where his org is a carrier"
     participant(p): "org.digitalcmr.CarrierAdmin"
     operation: READ
     resource(r): "org.digitalcmr.ECMR"
     condition: (r.carrier == p.org)
     action: ALLOW
 }

 rule CarrierTransporterCanReadECMR {
      description: "Allow Carrier Member to READ all his eCMR where he is a transporter"
      participant(p): "org.digitalcmr.CarrierMember"
      operation: READ
      resource(ecmr): "org.digitalcmr.ECMR"
      condition: (ecmr.carrier == p.org && ecmr.transporter == p.getIdentifier())
      action: ALLOW
  }


/**
   * Recipient permission list
   */

 rule RecipientAdminCanReadECMR {
     description: "Allow Recipient Admin to READ all eCMR where his org is a recipient"
     participant(p): "org.digitalcmr.RecipientAdmin"
     operation: READ
     resource(ecmr): "org.digitalcmr.ECMR"
     condition: (ecmr.recipientOrg == p.org)
     action: ALLOW
 }

 rule RecipientMemberCanReadHisECMR {
      description: "Allow Recipient to READ his own eCMR (where he is a recipient)"
      participant(p): "org.digitalcmr.RecipientMember"
      operation: READ
      resource(ecmr): "org.digitalcmr.ECMR"
      condition: (ecmr.recipientOrg == p.org && ecmr.recipient == p.getIdentifier())
      action: ALLOW
  }


