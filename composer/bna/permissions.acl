/**
 * System ACL
 */

rule SystemACL {
    description:  "System ACL to permit all access"
    participant: "org.hyperledger.composer.system.Participant"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

rule EverybodyCanReadVehicles {
    description:  "Allow everybody to read vehicle data"
    participant: "org.hyperledger.composer.system.Participant"
    operation: READ
    resource: "org.digitalcmr.Vehicle"
    action: ALLOW
}

/**
 * Digital CMR permission list
 */

/**
 * Leaseplan permission list
 */

rule LegalOwnerAdminCanReadTransportOrder {
    description: "Allow LegalOwnerAdmin to READ a Transport Order"
    participant(p): "org.digitalcmr.LegalOwnerAdmin"
    operation: READ
    resource(r): "org.digitalcmr.TransportOrder"
    condition: (r.owner.getIdentifier() == p.org.getIdentifier())
    action: ALLOW
}

rule LegalOwnerAdminCanCreateTransactionCreateTransportOrder {
    description: "Allow LegalOwnerAdmin to CREATE a CreateTransportOrder transaction"
    participant: "org.digitalcmr.LegalOwnerAdmin"
    operation: CREATE
    resource: "org.digitalcmr.CreateTransportOrder"
    action: ALLOW
}

rule LegalOwnerAdminCanSubmitTransactionCreateTransportOrder {
  description: "Allow LegalOwnerAdmin to CREATE a TransportOrder using the CreateTransportOrder transaction"
  participant(p): "org.digitalcmr.LegalOwnerAdmin"
  operation: CREATE
  resource(r): "org.digitalcmr.TransportOrder"
  transaction: "org.digitalcmr.CreateTransportOrder"
  condition: (r.owner.getIdentifier() == p.org.getIdentifier())
  action: ALLOW
}

rule LegalOwnerAdminCanCreateTransactionUpdateTransportOrderPickupWindow {
  description: "Allow LegalOwnerAdmin to CREATE a transaction to update the pickup window of a TransportOrder"
  participant: "org.digitalcmr.LegalOwnerAdmin"
  operation: CREATE
  resource: "org.digitalcmr.UpdateTransportOrderPickupWindow"
  action: ALLOW
}

rule LegalOwnerAdminCanSubmitTransactionUpdateTransportOrderPickupWindow {
  description: "Allow LegalOwnerAdmin to submit an UpdateTransportOrderPickupWindow transaction to UPDATE a TransportOrder"
  participant(p): "org.digitalcmr.LegalOwnerAdmin"
  operation: UPDATE
  resource(r): "org.digitalcmr.TransportOrder"
  transaction: "org.digitalcmr.UpdateTransportOrderPickupWindow"
  condition: (r.owner.getIdentifier() == p.org.getIdentifier())
  action: ALLOW
}

rule LegalOwnerAdminCanCreateTransactionUpdateTransportOrderDeliveryWindow {
  description: "Allow LegalOwnerAdmin to CREATE a transaction to update the Delivery window of a TransportOrder"
  participant: "org.digitalcmr.LegalOwnerAdmin"
  operation: CREATE
  resource: "org.digitalcmr.UpdateTransportOrderDeliveryWindow"
  action: ALLOW
}

rule LegalOwnerAdminCanSubmitTransactionUpdateTransportOrderDeliveryWindow {
  description: "Allow LegalOwnerAdmin to submit an UpdateTransportOrderDeliveryWindow transaction to UPDATE a TransportOrder"
  participant(p): "org.digitalcmr.LegalOwnerAdmin"
  operation: UPDATE
  resource(r): "org.digitalcmr.TransportOrder"
  transaction: "org.digitalcmr.UpdateTransportOrderDeliveryWindow"
  condition: (r.owner.getIdentifier() == p.org.getIdentifier())
  action: ALLOW
}

rule LegalOwnerAdminCanReadAndCreateECMR {
    description: "Allow LegalOwnerAdmin to CREATE and READ an ECMR"
    participant(p): "org.digitalcmr.LegalOwnerAdmin"
    operation: READ, CREATE
    resource(r): "org.digitalcmr.ECMR"
    condition: (r.owner.getIdentifier() == p.org.getIdentifier())
    action: ALLOW
}

rule LegalOwnerAdminCanCreateECMRCreateTransaction {
    description: "Allow LegalOwnerAdmin to CREATE an ECMR create transaction"
    participant: "org.digitalcmr.LegalOwnerAdmin"
    operation: CREATE
    resource: "org.digitalcmr.CreateECMR"
    action: ALLOW
}

rule LegalOwnerAdminCanSubmitCreateECMR {
    description: "Allow LegalOwnerAdmin to Submit a CreateECMR transaction for his organization"
    participant(p): "org.digitalcmr.LegalOwnerAdmin"
    operation: CREATE
    resource(r): "org.digitalcmr.ECMR"
    transaction: "org.digitalcmr.CreateECMR"
    condition: (r.owner.getIdentifier() == p.org.getIdentifier())
    action: ALLOW
}

rule LegalOwnerAdminCanCreateUpdateTransportOrderStatusToCancelledTransaction {
    description: "Allow LegalOwnerAdmin to CREATE UpdateTransportOrderStatusToCancelled transaction"
    participant: "org.digitalcmr.LegalOwnerAdmin"
    operation: CREATE
    resource: "org.digitalcmr.UpdateTransportOrderStatusToCancelled"
    action: ALLOW
}

rule LegalOwnerAdminCanSubmitUpdateTransportOrderStatusToCancelled {
    description: "Allow LegalOwnerAdmin to submit an UpdateTransportOrderStatusToCancelled transaction for his organization from OPEN status to CANCELLED"
    participant(p): "org.digitalcmr.LegalOwnerAdmin"
    operation: UPDATE
    resource(r): "org.digitalcmr.TransportOrder"
    transaction(tx): "org.digitalcmr.UpdateTransportOrderStatusToCancelled"
    condition: (r.owner.getIdentifier() == p.org.getIdentifier() && r.status == "OPEN")
    action: ALLOW
}

/**
 * Compound permission list
 */

rule CompoundAdminCanReadECMR {
    description: "Allow CompoundAdmin to READ all ECMR where his org is a source"
    participant(p): "org.digitalcmr.CompoundAdmin"
    operation: READ
    resource(r): "org.digitalcmr.ECMR"
    condition: (r.source.getIdentifier() == p.org.getIdentifier())
    action: ALLOW
}

rule CompoundAdminCanCreateUpdateEcmrStatusToLoadedTransaction {
    description: "Allow CompoundAdmin to CREATE an UpdateEcmrStatusToLoaded transaction"
    participant: "org.digitalcmr.CompoundAdmin"
    operation: CREATE
    resource: "org.digitalcmr.UpdateEcmrStatusToLoaded"
    action: ALLOW
}

rule CompoundAdminCanSubmitUpdateEcmrStatusToLoaded {
    description: "Allow CompoundAdmin to submit an UpdateEcmrStatusToLoaded transaction for his organization when ECMR status is CREATED"
    participant(p): "org.digitalcmr.CompoundAdmin"
    operation: UPDATE
    resource(r): "org.digitalcmr.ECMR"
    transaction(tx): "org.digitalcmr.UpdateEcmrStatusToLoaded"
    condition: (r.source.getIdentifier() == p.org.getIdentifier() && r.status == "CREATED")
    action: ALLOW
}

/**
  * Carrier Admin permission list
  */

rule CarrierAdminCanReadECMR {
    description: "Allow CarrierAdmin to READ all ECMR where his org is a carrier"
    participant(p): "org.digitalcmr.CarrierAdmin"
    operation: READ
    resource(r): "org.digitalcmr.ECMR"
    condition: (r.carrier.getIdentifier() == p.org.getIdentifier())
    action: ALLOW
}

rule CarrierAdminCanReadTransportOrder {
    description: "Allow CarrierAdmin to READ a Transport Order"
    participant(p): "org.digitalcmr.CarrierAdmin"
    operation: READ
    resource(r): "org.digitalcmr.TransportOrder"
    condition: (r.carrier.getIdentifier() == p.org.getIdentifier())
    action: ALLOW
}

rule CarrierAdminCanCreateECMR {
    description: "Allow CarrierAdmin to CREATE an ECMR"
    participant(p): "org.digitalcmr.CarrierAdmin"
    operation: CREATE
    resource(r): "org.digitalcmr.ECMR"
    condition: (r.carrier.getIdentifier() == p.org.getIdentifier())
    action: ALLOW
}

rule CarrierAdminCanCreateECMRCreateTransaction {
    description: "Allow CarrierAdmin to CREATE an CreateECMR transaction"
    participant: "org.digitalcmr.CarrierAdmin"
    operation: CREATE
    resource: "org.digitalcmr.CreateECMR"
    action: ALLOW
}

rule CarrierAdminCanSubmitCreateECMR {
    description: "Allow CarrierAdmin to Submit a CreateECMR transaction for his organization"
    participant(p): "org.digitalcmr.CarrierAdmin"
    operation: CREATE
    resource(r): "org.digitalcmr.ECMR"
    transaction: "org.digitalcmr.CreateECMR"
    condition: (r.carrier.getIdentifier() == p.org.getIdentifier())
    action: ALLOW
}

rule CarrierAdminCanCreateECMRsCreateTransaction {
    description: "Allow CarrierAdmin to submit a CreateECMRs transaction"
    participant: "org.digitalcmr.CarrierAdmin"
    operation: CREATE
    resource: "org.digitalcmr.CreateECMRs"
    action: ALLOW
}

rule CarrierAdminCanSubmitCreateECMRs {
    description: "Allow CarrierAdmin to Submit a CreateECMRs transaction for his organization"
    participant(p): "org.digitalcmr.CarrierAdmin"
    operation: CREATE
    resource(r): "org.digitalcmr.ECMR"
    transaction: "org.digitalcmr.CreateECMRs"
    condition: (r.carrier.getIdentifier() == p.org.getIdentifier())
    action: ALLOW
}

rule CarrierAdminCanCreateUpdateExpectedPickupWindow {
  description: "Allow CarrierAdmin to create an UpdateExpectedPickupWindow transaction"
  participant: "org.digitalcmr.CarrierAdmin"
  operation: CREATE
  resource: "org.digitalcmr.UpdateExpectedPickupWindow"
  action: ALLOW
}

rule CarrierAdminCanSubmitUpdateExpectedPickupWindowTransaction {
  description: "Allow CarrierAdmin to submit an UpdateExpectedPickupWindow transaction for an ECMR where his org is the carrier and status of ECMR is IN_TRANSIT"
  participant(p): "org.digitalcmr.CarrierAdmin"
  operation: UPDATE
  resource(r): "org.digitalcmr.ECMR"
  transaction(tx): "org.digitalcmr.UpdateExpectedPickupWindow"
  condition: (r.carrier.getIdentifier() == p.org.getIdentifier() && r.status == "CREATED")
  action: ALLOW
}

rule CarrierAdminCanCreateUpdateExpectedDeliveryWindow {
  description: "Allow CarrierAdmin to create an UpdateExpectedDeliveryWindow transaction"
  participant: "org.digitalcmr.CarrierAdmin"
  operation: CREATE
  resource: "org.digitalcmr.UpdateExpectedDeliveryWindow"
  action: ALLOW
}

rule CarrierAdminCanSubmitUpdateExpectedDeliveryWindowTransaction {
  description: "Allow CarrierAdmin to submit an UpdateExpectedDeliveryWindow transaction for an ECMR where his org is the carrier and status of ECMR is IN_TRANSIT"
  participant(p): "org.digitalcmr.CarrierAdmin"
  operation: UPDATE
  resource(r): "org.digitalcmr.ECMR"
  transaction(tx): "org.digitalcmr.UpdateExpectedDeliveryWindow"
  condition: (r.carrier.getIdentifier() == p.org.getIdentifier() && r.status == "IN_TRANSIT")
  action: ALLOW
}

rule CarrierAdminCanUpdateTransportOrder {
    description: "Allow CarrierAdmin to UPDATE a TransportOrder for his organization only if the current TransportOrder status is OPEN"
    participant(p): "org.digitalcmr.CarrierAdmin"
    operation: UPDATE
    resource(r): "org.digitalcmr.TransportOrder"
    condition: (r.carrier.getIdentifier() == p.org.getIdentifier() && r.status == "OPEN")
    action: ALLOW
}

rule CarrierAdminCanCreateUpdateECMRStatusToCancelledTransaction {
    description: "Allow CarrierAdmin to CREATE UpdateECMRStatusToCancelled transaction only when ECMR status is CREATED"
    participant: "org.digitalcmr.CarrierAdmin"
    operation: CREATE
    resource: "org.digitalcmr.UpdateECMRStatusToCancelled"
    action: ALLOW
}

rule CarrierAdminCanSubmitUpdateECMRStatusToCancelled {
    description: "Allow CarrierAdmin to submit an UpdateECMRStatusToCancelled transaction for his organization from CREATED status to CANCELLED"
    participant(p): "org.digitalcmr.CarrierAdmin"
    operation: UPDATE
    resource(r): "org.digitalcmr.ECMR"
    transaction(tx): "org.digitalcmr.UpdateECMRStatusToCancelled"
    condition: (r.carrier.getIdentifier() == p.org.getIdentifier() && r.status == "CREATED")
    action: ALLOW
}

/**
  * Carrier Member permission list
  */

rule CarrierMemberCanReadECMR {
    description: "Allow CarrierMember to READ all ECMRs where he is a transporter and status is not CREATED"
    participant(p): "org.digitalcmr.CarrierMember"
    operation: READ
    resource(ecmr): "org.digitalcmr.ECMR"
    condition: (ecmr.carrier.getIdentifier() == p.org.getIdentifier() && ecmr.transporter.getIdentifier() == p.getIdentifier()
    && ecmr.status != "CREATED")
    action: ALLOW
}

rule CarrierMemberCanReadTransportOrder {
    description: "Allow CarrierMember to READ TransportOrder where his company is carrier and the status is IN_PROGRESS"
    participant(p): "org.digitalcmr.CarrierMember"
    operation: READ
    resource(r): "org.digitalcmr.TransportOrder"
    condition: (r.carrier.getIdentifier() == p.org.getIdentifier() && r.status == "IN_PROGRESS")
    action: ALLOW
}

rule CarrierMemberCreateUpdateEcmrStatusToInTransitTransaction {
    description: "Allow CarrierMember to CREATE an UpdateEcmrStatusToInTransit transaction"
    participant: "org.digitalcmr.CarrierMember"
    operation: CREATE
    resource: "org.digitalcmr.UpdateEcmrStatusToInTransit"
    action: ALLOW
}

rule CarrierMemberCanSubmitUpdateEcmrStatusToInTransit {
    description: "Allow CarrierMember to submit an UpdateEcmrStatusToInTransit transaction for his organization when ECMR status is LOADED"
    participant(p): "org.digitalcmr.CarrierMember"
    operation: UPDATE
    resource(r): "org.digitalcmr.ECMR"
    transaction(tx): "org.digitalcmr.UpdateEcmrStatusToInTransit"
    condition: (r.transporter.getIdentifier() == p.getIdentifier() && r.status == "LOADED")
    action: ALLOW
}

rule CarrierMemberCreateUpdateEcmrStatusToDeliveredTransaction {
    description: "Allow CarrierMember to CREATE an UpdateEcmrStatusToDelivered transaction"
    participant: "org.digitalcmr.CarrierMember"
    operation: CREATE
    resource: "org.digitalcmr.UpdateEcmrStatusToDelivered"
    action: ALLOW
}

rule CarrierMemberCanSubmitUpdateEcmrStatusToDelivered {
    description: "Allow CarrierMember to Submit an UpdateEcmrStatusToDelivered transaction for his organization when ECMR status is IN_TRANSIT"
    participant(p): "org.digitalcmr.CarrierMember"
    operation: UPDATE
    resource(r): "org.digitalcmr.ECMR"
    transaction(tx): "org.digitalcmr.UpdateEcmrStatusToDelivered"
    condition: (r.transporter.getIdentifier() == p.getIdentifier() && r.status == "IN_TRANSIT")
    action: ALLOW
}

rule CarrierMemberCanUpdateTransportOrder {
    description: "Allow CarrierMember to UPDATE a TransportOrder for his organization only if the current TransportOrder status is IN_PROGRESS"
    participant(p): "org.digitalcmr.CarrierMember"
    operation: UPDATE
    resource(r): "org.digitalcmr.TransportOrder"
    condition: (r.carrier.getIdentifier() == p.org.getIdentifier() && r.status == "IN_PROGRESS")
    action: ALLOW
}

/**
 * Recipient permission list
 */

rule RecipientAdminCanReadECMR {
    description: "Allow RecipientAdmin to READ all ECMR where his org is a recipient"
    participant(p): "org.digitalcmr.RecipientAdmin"
    operation: READ
    resource(ecmr): "org.digitalcmr.ECMR"
    condition: (ecmr.recipientOrg.getIdentifier() == p.org.getIdentifier())
    action: ALLOW
}

rule RecipientMemberCanReadHisECMR {
    description: "Allow RecipientMember to READ ECMR where he is recipient"
    participant(p): "org.digitalcmr.RecipientMember"
    operation: READ
    resource(ecmr): "org.digitalcmr.ECMR"
    condition: (ecmr.recipientOrg.getIdentifier() == p.org.getIdentifier() && ecmr.recipient.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

rule RecipientMemberCanCreateUpdateEcmrStatusToConfirmedDeliveredTransaction {
    description: "Allow RecipientMember to CREATE an UpdateEcmrStatusToConfirmedDelivered transaction"
    participant: "org.digitalcmr.RecipientMember"
    operation: CREATE
    resource: "org.digitalcmr.UpdateEcmrStatusToConfirmedDelivered"
    action: ALLOW
}

rule RecipientMemberCanSubmitUpdateEcmrStatusToConfirmedDelivered {
    description: "Allow RecipientMember to Submit an UpdateEcmrStatusToConfirmedDelivered transaction for his organization when ECMR status is DELIVERED"
    participant(p): "org.digitalcmr.RecipientMember"
    operation: UPDATE
    resource(r): "org.digitalcmr.ECMR"
    transaction(tx): "org.digitalcmr.UpdateEcmrStatusToConfirmedDelivered"
    condition: (r.recipient.getIdentifier() == p.getIdentifier() && r.status == "DELIVERED")
    action: ALLOW
}
