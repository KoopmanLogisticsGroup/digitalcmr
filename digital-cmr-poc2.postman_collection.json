{
  "info": {
    "name": "digital-cmr-poc2",
    "_postman_id": "31883a88-87ab-2a1e-9d66-566e56d6de7f",
    "description": "",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Legal Owner Admin - Login",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "var jsonData = JSON.parse(responseBody);",
              "",
              "postman.setEnvironmentVariable(\"legalOwnerToken\", jsonData.token);",
              "",
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "tests[\"Authentication successful\"] = jsonData.success === true;",
              "tests[\"Correct user\"] = jsonData.user[\"username\"] === \"lapo@leaseplan.org\";"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\" : \"lapo@leaseplan.org\",\n  \"password\" : \"passw0rd\"\n}"
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/login",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "login"
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Legal Owner - Cannot Create  vehicle",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Is not able to create vehicle, with status code 500\"] = responseCode.code === 500;"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-access-token",
            "value": "{{legalOwnerToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "[\n\t{\n\t\"$class\": \"org.digitalcmr.Vehicle\",\n    \"vin\": \"231213123312\",\n    \"manufacturer\": \"Audi\",\n    \"model\": \"A8\",\n    \"type\": \"sportback\",\n    \"ecmrs\": [\n    \t\t\t\"resource:org.digitalcmr.ECMR#A1234567890\",\n                \"resource:org.digitalcmr.ECMR#B1234567890\"\n             ],\n    \"odoMeterReading\": 0,\n    \"plateNumber\": \"AA123B\"\n\t}\n]\n"
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/vehicle/",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "vehicle",
            ""
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Legal Owner - Create ECMR",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "// var jsonData = JSON.parse(responseBody);",
              "",
              "// postman.setEnvironmentVariable(\"ecmrID\", jsonData[0].ecmrID);"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-access-token",
            "value": "{{legalOwnerToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n      \"ecmrID\": \"BUUEW23727327\",\n      \"status\": \"CREATED\",\n      \"creation\": {\n        \"address\": {\n          \"name\": \"Amsterdam Compound\",\n          \"street\": \"compenstraat\",\n          \"houseNumber\": \"21\",\n          \"city\": \"Assen\",\n          \"zipCode\": \"9976ZH\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 43.1927,\n          \"longitude\": 23.3249\n        },\n        \"date\": 1502402400000\n      },\n      \"loading\": {\n        \"address\": {\n          \"name\": \"Amsterdam Compound\",\n          \"street\": \"compenstraat\",\n          \"houseNumber\": \"21\",\n          \"city\": \"Amsterdam Zuid\",\n          \"zipCode\": \"9976ZH\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 43.1927,\n          \"longitude\": 23.3249\n        },\n        \"date\": 1502402400000\n      },\n      \"delivery\": {\n        \"address\": {\n          \"name\": \"Rob Carman\",\n          \"street\": \"autostraat\",\n          \"houseNumber\": \"12\",\n          \"city\": \"Rotterdam\",\n          \"zipCode\": \"9442KO\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 51.4443,\n          \"longitude\": 60.3323\n        },\n        \"date\": 1502488800000\n      },\n      \"owner\": \"leaseplan\",\n      \"source\": \"amsterdamcompound\",\n      \"transporter\": \"james@koopman.org\",\n      \"carrier\": \"asdf\",\n      \"recipientOrg\": \"cardealer\",\n      \"recipient\": \"rob@cardealer.org\",\n      \"issueDate\": 0,\n      \"issuedBy\": \"koopman\",\n      \"carrierComments\": \"No comments\",\n      \"documents\": [\n        \"doc1\"\n      ],\n      \"goods\": [\n        {\n          \"vehicle\": {\n            \"vin\": \"183726339N\",\n            \"manufacturer\": \"Audi\",\n            \"model\": \"A1\",\n            \"type\": \"sportback\",\n            \"ecmrs\": [],\n            \"odoMeterReading\": 0,\n            \"plateNumber\": \"AV198RX\"\n          },\n          \"description\": \"vehicle\",\n          \"weight\": 1500\n        },\n        {\n          \"vehicle\": {\n            \"vin\": \"736182CHD28172\",\n            \"manufacturer\": \"Mercedes\",\n            \"model\": \"SLK\",\n            \"type\": \"Station\",\n            \"ecmrs\": [],\n            \"odoMeterReading\": 0,\n            \"plateNumber\": \"I827YE\"\n          },\n          \"description\": \"vehicle\",\n          \"weight\": 1800\n        }\n      ],\n      \"legalOwnerInstructions\": \"string\",\n      \"paymentInstructions\": \"string\",\n      \"payOnDelivery\": \"string\"\n    }"
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/ECMR/",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "ECMR",
            ""
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Legal Owner - GET ECMR",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "var jsonData = JSON.parse(responseBody);",
              "if (jsonData.length > 0) {",
              "    tests[\"is of type ecmr\"] = (jsonData[0].ecmrID !== null && jsonData[0].ecmrID !== undefined);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "x-access-token",
            "value": "{{legalOwnerToken}}"
          }
        ],
        "body": {},
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/ECMR/",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "ECMR",
            ""
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Legal Owner - GET ECMR by ID",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "var jsonData = JSON.parse(responseBody);",
              "console.log(jsonData);",
              "if (jsonData) {",
              "    tests[\"is of type ecmr\"] = (jsonData.ecmrID !== null && jsonData.ecmrID !== undefined);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "x-access-token",
            "value": "{{legalOwnerToken}}"
          }
        ],
        "body": {},
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/ECMR/ecmrID/A1234567890",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "ECMR",
            "ecmrID",
            "A1234567890"
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Legal Owner - Get all Vehicles",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "var jsonData = JSON.parse(responseBody);",
              "console.log(jsonData);",
              "if (jsonData.length > 0) {",
              "    tests[\"is of type vehicle\"] = (jsonData[0].vin !== null && jsonData[0].vin !== undefined);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-access-token",
            "value": "{{legalOwnerToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/vehicle/",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "vehicle",
            ""
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Legal Owner - Get Vehicle by VIN",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "// var jsonData = JSON.parse(responseBody);",
              "// if (jsonData.length > 0) {",
              "//     tests[\"is of type ecmr\"] = (jsonData[0].ecmrID !== null && jsonData[0].ecmrID !== undefined);",
              "// }"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-access-token",
            "value": "{{legalOwnerToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/vehicle/vin/{{vinNumber}}",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "vehicle",
            "vin",
            "{{vinNumber}}"
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Legal Owner - Get Vehicle by platenumber",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "// var jsonData = JSON.parse(responseBody);",
              "// if (jsonData.length > 0) {",
              "//     tests[\"is of type ecmr\"] = (jsonData[0].ecmrID !== null && jsonData[0].ecmrID !== undefined);",
              "// }"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-access-token",
            "value": "{{legalOwnerToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/vehicle/platenumber/{{plateNumber}}",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "vehicle",
            "platenumber",
            "{{plateNumber}}"
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Compound Admin - Login",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "var jsonData = JSON.parse(responseBody);",
              "",
              "postman.setEnvironmentVariable(\"compoundToken\", jsonData.token);",
              "",
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "tests[\"Authentication successful\"] = jsonData.success === true;",
              "tests[\"Correct user\"] = jsonData.user[\"username\"] === \"willem@amsterdamcompound.org\";"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\" : \"willem@amsterdamcompound.org\",\n  \"password\" : \"passw0rd\"\n}"
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/login",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "login"
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Compound - Cannot create ECMR",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 500\"] = responseCode.code === 500;",
              "",
              "// var jsonData = JSON.parse(responseBody);",
              "",
              "// postman.setEnvironmentVariable(\"ecmrID\", jsonData[0].ecmrID);"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-access-token",
            "value": "{{compoundToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n      \"ecmrID\": \"BUUEW23727327\",\n      \"status\": \"CREATED\",\n      \"creation\": {\n        \"address\": {\n          \"name\": \"Amsterdam Compound\",\n          \"street\": \"compenstraat\",\n          \"houseNumber\": \"21\",\n          \"city\": \"Assen\",\n          \"zipCode\": \"9976ZH\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 43.1927,\n          \"longitude\": 23.3249\n        },\n        \"date\": 1502402400000\n      },\n      \"loading\": {\n        \"address\": {\n          \"name\": \"Amsterdam Compound\",\n          \"street\": \"compenstraat\",\n          \"houseNumber\": \"21\",\n          \"city\": \"Amsterdam Zuid\",\n          \"zipCode\": \"9976ZH\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 43.1927,\n          \"longitude\": 23.3249\n        },\n        \"date\": 1502402400000\n      },\n      \"delivery\": {\n        \"address\": {\n          \"name\": \"Rob Carman\",\n          \"street\": \"autostraat\",\n          \"houseNumber\": \"12\",\n          \"city\": \"Rotterdam\",\n          \"zipCode\": \"9442KO\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 51.4443,\n          \"longitude\": 60.3323\n        },\n        \"date\": 1502488800000\n      },\n      \"owner\": \"leaseplan\",\n      \"source\": \"amsterdamcompound\",\n      \"transporter\": \"james@koopman.org\",\n      \"carrier\": \"asdf\",\n      \"recipientOrg\": \"cardealer\",\n      \"recipient\": \"rob@cardealer.org\",\n      \"issueDate\": 0,\n      \"issuedBy\": \"koopman\",\n      \"carrierComments\": \"No comments\",\n      \"documents\": [\n        \"doc1\"\n      ],\n      \"goods\": [\n        {\n          \"vehicle\": {\n            \"vin\": \"183726339N\",\n            \"manufacturer\": \"Audi\",\n            \"model\": \"A1\",\n            \"type\": \"sportback\",\n            \"ecmrs\": [],\n            \"odoMeterReading\": 0,\n            \"plateNumber\": \"AV198RX\"\n          },\n          \"description\": \"vehicle\",\n          \"weight\": 1500\n        },\n        {\n          \"vehicle\": {\n            \"vin\": \"736182CHD28172\",\n            \"manufacturer\": \"Mercedes\",\n            \"model\": \"SLK\",\n            \"type\": \"Station\",\n            \"ecmrs\": [],\n            \"odoMeterReading\": 0,\n            \"plateNumber\": \"I827YE\"\n          },\n          \"description\": \"vehicle\",\n          \"weight\": 1800\n        }\n      ],\n      \"legalOwnerInstructions\": \"string\",\n      \"paymentInstructions\": \"string\",\n      \"payOnDelivery\": \"string\"\n    }"
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/ECMR/",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "ECMR",
            ""
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Compound - GET ECMR",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "var jsonData = JSON.parse(responseBody);",
              "if (jsonData.length > 0) {",
              "    tests[\"is of type ecmr\"] = (jsonData[0].ecmrID !== null && jsonData[0].ecmrID !== undefined);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "x-access-token",
            "value": "{{compoundToken}}"
          }
        ],
        "body": {},
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/ECMR/",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "ECMR",
            ""
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Compound - GET ECMR by ID",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "var jsonData = JSON.parse(responseBody);",
              "if (jsonData) {",
              "    tests[\"is of type ecmr\"] = (jsonData.ecmrID !== null && jsonData.ecmrID !== undefined);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "x-access-token",
            "value": "{{compoundToken}}"
          }
        ],
        "body": {},
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/ECMR/ecmrID/A1234567890",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "ECMR",
            "ecmrID",
            "A1234567890"
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Compound - GET ECMR by STATUS",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "var jsonData = JSON.parse(responseBody);",
              "console.log(jsonData[0].status)",
              "if (jsonData.length > 0) {",
              "    tests[\"is of type ecmr filtered by status CREATED\"] = (jsonData[0].status === 'CREATED' && jsonData[0].ecmrID !== undefined);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "x-access-token",
            "value": "{{compoundToken}}"
          },
          {
            "key": "",
            "value": "",
            "disabled": true
          }
        ],
        "body": {},
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/ECMR/status/{{status_CREATED}}",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "ECMR",
            "status",
            "{{status_CREATED}}"
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Compound - GET all Vehicles",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "var jsonData = JSON.parse(responseBody);",
              "console.log(jsonData);",
              "if (jsonData.length > 0) {",
              "    tests[\"is of type vehicle\"] = (jsonData[0].vin !== null && jsonData[0].vin !== undefined);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-access-token",
            "value": "{{compoundToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/vehicle/",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "vehicle",
            ""
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Compound - Get Vehicle by VIN",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "// var jsonData = JSON.parse(responseBody);",
              "// if (jsonData.length > 0) {",
              "//     tests[\"is of type ecmr\"] = (jsonData[0].ecmrID !== null && jsonData[0].ecmrID !== undefined);",
              "// }"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-access-token",
            "value": "{{compoundToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/vehicle/vin/{{vinNumber}}",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "vehicle",
            "vin",
            "{{vinNumber}}"
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Compound - Update ECMR status to LOADED",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;"
            ]
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-access-token",
            "value": "{{compoundToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n      \"ecmrID\": \"B1234567890\",\n      \"status\": \"LOADED\",\n      \"creation\": {\n        \"address\": {\n          \"name\": \"Amsterdam Compound\",\n          \"street\": \"compenstraat\",\n          \"houseNumber\": \"21\",\n          \"city\": \"Assen\",\n          \"zipCode\": \"9976ZH\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 43.1927,\n          \"longitude\": 23.3249\n        },\n        \"date\": 1502402400000\n      },\n      \"loading\": {\n        \"address\": {\n          \"name\": \"Amsterdam Compound\",\n          \"street\": \"compenstraat\",\n          \"houseNumber\": \"21\",\n          \"city\": \"Amsterdam Zuid\",\n          \"zipCode\": \"9976ZH\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 43.1927,\n          \"longitude\": 23.3249\n        },\n        \"date\": 1502402400000\n      },\n      \"delivery\": {\n        \"address\": {\n          \"name\": \"Rob Carman\",\n          \"street\": \"autostraat\",\n          \"houseNumber\": \"12\",\n          \"city\": \"Rotterdam\",\n          \"zipCode\": \"9442KO\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 51.4443,\n          \"longitude\": 60.3323\n        },\n        \"date\": 1502488800000\n      },\n      \"owner\": \"leaseplan\",\n      \"source\": \"amsterdamcompound\",\n      \"transporter\": \"harry@koopman.org\",\n      \"carrier\": \"koopman\",\n      \"recipientOrg\": \"cardealer\",\n      \"recipient\": \"rob@cardealer.org\",\n      \"issueDate\": 0,\n      \"issuedBy\": \"koopman\",\n      \"carrierComments\": \"No comments\",\n      \"documents\": [\n        \"doc1\"\n      ],\n      \"goods\": [\n        {\n          \"vehicle\": {\n            \"vin\": \"183726339N\",\n            \"manufacturer\": \"Audi\",\n            \"model\": \"A1\",\n            \"type\": \"sportback\",\n            \"ecmrs\": [],\n            \"odoMeterReading\": 0,\n            \"plateNumber\": \"AV198RX\"\n          },\n          \"description\": \"vehicle\",\n          \"weight\": 1500,\n          \"compoundRemark\": {\n          \t\"isDamaged\": true,\n          \t\"comments\": \"broken window\"\n          }\n        },\n        {\n          \"vehicle\": {\n            \"vin\": \"736182CHD28172\",\n            \"manufacturer\": \"Mercedes\",\n            \"model\": \"SLK\",\n            \"type\": \"Station\",\n            \"ecmrs\": [],\n            \"odoMeterReading\": 0,\n            \"plateNumber\": \"I827YE\"\n          },\n          \"description\": \"vehicle\",\n          \"weight\": 1800,\n          \"compoundRemark\": {\n          \t\"isDamaged\": false,\n          \t\"comments\": \"wrong color\"\n          }\n        }\n      ],\n      \"legalOwnerInstructions\": \"string\",\n      \"paymentInstructions\": \"string\",\n      \"payOnDelivery\": \"string\",\n      \"compoundSignature\": {\n      \t\"certificate\": \"willem@amsterdamcompound.org\",\n      \t\"timestamp\": 0,\n      \t\"generalRemark\": {\n      \t\t\"comments\": \"some general comments\"\n      \t}\n      }\n    }"
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/ECMR/",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "ECMR",
            ""
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Carrier Member - Login",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "var jsonData = JSON.parse(responseBody);",
              "",
              "postman.setEnvironmentVariable(\"carrierMemberToken\", jsonData.token);",
              "",
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "tests[\"Authentication succuessful\"] = jsonData.success === true;",
              "tests[\"Correct user\"] = jsonData.user[\"username\"] === \"harry@koopman.org\";"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\" : \"harry@koopman.org\",\n  \"password\" : \"passw0rd\"\n}"
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/login",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "login"
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Carrier Member - Cannot create ECMR",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 500\"] = responseCode.code === 500;",
              "",
              "// var jsonData = JSON.parse(responseBody);",
              "",
              "// postman.setEnvironmentVariable(\"ecmrID\", jsonData[0].ecmrID);"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-access-token",
            "value": "{{carrierMemberToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n      \"ecmrID\": \"BUUEW23727327\",\n      \"status\": \"CREATED\",\n      \"creation\": {\n        \"address\": {\n          \"name\": \"Amsterdam Compound\",\n          \"street\": \"compenstraat\",\n          \"houseNumber\": \"21\",\n          \"city\": \"Assen\",\n          \"zipCode\": \"9976ZH\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 43.1927,\n          \"longitude\": 23.3249\n        },\n        \"date\": 1502402400000\n      },\n      \"loading\": {\n        \"address\": {\n          \"name\": \"Amsterdam Compound\",\n          \"street\": \"compenstraat\",\n          \"houseNumber\": \"21\",\n          \"city\": \"Amsterdam Zuid\",\n          \"zipCode\": \"9976ZH\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 43.1927,\n          \"longitude\": 23.3249\n        },\n        \"date\": 1502402400000\n      },\n      \"delivery\": {\n        \"address\": {\n          \"name\": \"Rob Carman\",\n          \"street\": \"autostraat\",\n          \"houseNumber\": \"12\",\n          \"city\": \"Rotterdam\",\n          \"zipCode\": \"9442KO\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 51.4443,\n          \"longitude\": 60.3323\n        },\n        \"date\": 1502488800000\n      },\n      \"owner\": \"leaseplan\",\n      \"source\": \"amsterdamcompound\",\n      \"transporter\": \"james@koopman.org\",\n      \"carrier\": \"asdf\",\n      \"recipientOrg\": \"cardealer\",\n      \"recipient\": \"rob@cardealer.org\",\n      \"issueDate\": 0,\n      \"issuedBy\": \"koopman\",\n      \"carrierComments\": \"No comments\",\n      \"documents\": [\n        \"doc1\"\n      ],\n      \"goods\": [\n        {\n          \"vehicle\": {\n            \"vin\": \"183726339N\",\n            \"manufacturer\": \"Audi\",\n            \"model\": \"A1\",\n            \"type\": \"sportback\",\n            \"ecmrs\": [],\n            \"odoMeterReading\": 0,\n            \"plateNumber\": \"AV198RX\"\n          },\n          \"description\": \"vehicle\",\n          \"weight\": 1500\n        },\n        {\n          \"vehicle\": {\n            \"vin\": \"736182CHD28172\",\n            \"manufacturer\": \"Mercedes\",\n            \"model\": \"SLK\",\n            \"type\": \"Station\",\n            \"ecmrs\": [],\n            \"odoMeterReading\": 0,\n            \"plateNumber\": \"I827YE\"\n          },\n          \"description\": \"vehicle\",\n          \"weight\": 1800\n        }\n      ],\n      \"legalOwnerInstructions\": \"string\",\n      \"paymentInstructions\": \"string\",\n      \"payOnDelivery\": \"string\"\n    }"
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/ECMR/",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "ECMR",
            ""
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Carrier - GET ECMR",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "var jsonData = JSON.parse(responseBody);",
              "if (jsonData.length > 0) {",
              "    tests[\"is of type ecmr\"] = (jsonData[0].ecmrID !== null && jsonData[0].ecmrID !== undefined);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "x-access-token",
            "value": "{{carrierMemberToken}}"
          }
        ],
        "body": {},
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/ECMR/",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "ECMR",
            ""
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Carrier - GET ECMR by ID",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "var jsonData = JSON.parse(responseBody);",
              "if (jsonData) {",
              "    tests[\"is of type ecmr\"] = (jsonData.ecmrID !== null && jsonData.ecmrID !== undefined);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "x-access-token",
            "value": "{{carrierMemberToken}}"
          }
        ],
        "body": {},
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/ECMR/ecmrID/B1234567890",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "ECMR",
            "ecmrID",
            "B1234567890"
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Carrier Member - is not able to GET ECMR when status is CREATED",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "var jsonData = JSON.parse(responseBody);",
              "if (jsonData === 200) {",
              "    tests[\"is not able to get status by CREATED\"] = (jsonData === 200);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "x-access-token",
            "value": "{{carrierMemberToken}}"
          },
          {
            "key": "",
            "value": "",
            "disabled": true
          }
        ],
        "body": {},
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/ECMR/status/{{status_CREATED}}",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "ECMR",
            "status",
            "{{status_CREATED}}"
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Carrier - Get all Vehicles",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "var jsonData = JSON.parse(responseBody);",
              "console.log(jsonData);",
              "if (jsonData.length > 0) {",
              "    tests[\"is of type vehicle\"] = (jsonData[0].vin !== null && jsonData[0].vin !== undefined);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-access-token",
            "value": "{{carrierMemberToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/vehicle/",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "vehicle",
            ""
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Carrier - Get Vehicle by VIN",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "// var jsonData = JSON.parse(responseBody);",
              "// if (jsonData.length > 0) {",
              "//     tests[\"is of type ecmr\"] = (jsonData[0].ecmrID !== null && jsonData[0].ecmrID !== undefined);",
              "// }"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-access-token",
            "value": "{{carrierMemberToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/vehicle/vin/{{vinNumber}}",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "vehicle",
            "vin",
            "{{vinNumber}}"
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Carrier - Update ECMR status to IN_TRANSIT",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;"
            ]
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-access-token",
            "value": "{{carrierMemberToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n      \"ecmrID\": \"B1234567890\",\n      \"status\": \"IN_TRANSIT\",\n      \"creation\": {\n        \"address\": {\n          \"name\": \"Amsterdam Compound\",\n          \"street\": \"compenstraat\",\n          \"houseNumber\": \"21\",\n          \"city\": \"Assen\",\n          \"zipCode\": \"9976ZH\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 43.1927,\n          \"longitude\": 23.3249\n        },\n        \"date\": 1502402400000\n      },\n      \"loading\": {\n        \"address\": {\n          \"name\": \"Amsterdam Compound\",\n          \"street\": \"compenstraat\",\n          \"houseNumber\": \"21\",\n          \"city\": \"Amsterdam Zuid\",\n          \"zipCode\": \"9976ZH\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 43.1927,\n          \"longitude\": 23.3249\n        },\n        \"date\": 1502402400000\n      },\n      \"delivery\": {\n        \"address\": {\n          \"name\": \"Rob Carman\",\n          \"street\": \"autostraat\",\n          \"houseNumber\": \"12\",\n          \"city\": \"Rotterdam\",\n          \"zipCode\": \"9442KO\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 51.4443,\n          \"longitude\": 60.3323\n        },\n        \"date\": 1502488800000\n      },\n      \"owner\": \"leaseplan\",\n      \"source\": \"amsterdamcompound\",\n      \"transporter\": \"harry@koopman.org\",\n      \"carrier\": \"koopman\",\n      \"recipientOrg\": \"cardealer\",\n      \"recipient\": \"rob@cardealer.org\",\n      \"issueDate\": 0,\n      \"issuedBy\": \"koopman\",\n      \"carrierComments\": \"No comments\",\n      \"documents\": [\n        \"doc1\"\n      ],\n      \"goods\": [\n        {\n          \"vehicle\": {\n            \"vin\": \"183726339N\",\n            \"manufacturer\": \"Audi\",\n            \"model\": \"A1\",\n            \"type\": \"sportback\",\n            \"ecmrs\": [],\n            \"odoMeterReading\": 0,\n            \"plateNumber\": \"AV198RX\"\n          },\n          \"description\": \"vehicle\",\n          \"weight\": 1500,\n          \"compoundRemark\": {\n          \t\"isDamaged\": true,\n          \t\"comments\": \"broken windowr\"\n          },\n          \"carrierLoadingRemark\": {\n          \t\"isDamaged\": false,\n          \t\"comments\": \"The car has no window\"\n          }\n        },\n        {\n          \"vehicle\": {\n            \"vin\": \"736182CHD28172\",\n            \"manufacturer\": \"Mercedes\",\n            \"model\": \"SLK\",\n            \"type\": \"Station\",\n            \"ecmrs\": [],\n            \"odoMeterReading\": 0,\n            \"plateNumber\": \"I827YE\"\n          },\n          \"description\": \"vehicle\",\n          \"weight\": 1800,\n          \"compoundRemark\": {\n          \t\"isDamaged\": false,\n          \t\"comments\": \"wrong color\"\n          },\n          \"carrierLoadingRemark\": {\n          \t\"isDamaged\": false,\n          \t\"comments\": \"it is a nice blue\"\n          }\n        }\n      ],\n      \"legalOwnerInstructions\": \"string\",\n      \"paymentInstructions\": \"string\",\n      \"payOnDelivery\": \"string\",\n      \"compoundSignature\": {\n      \t\"certificate\": \"willem@amsterdamcompound.org\",\n      \t\"timestamp\": 0,\n      \t\"generalRemark\": {\n      \t\t\"comments\": \"some general comments\"\n      \t}\n      },\n      \"carrierLoadingSignature\": {\n      \t\"certificate\": \"harry@koopman.org\",\n      \t\"timestamp\": 0,\n      \t\"generalRemark\": {\n      \t\t\"comments\": \"some general comments\"\n      \t\t}\n      \t}\n    }"
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/ECMR/",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "ECMR",
            ""
          ]
        },
        "description": "Updates selected ecmr status to IN_TRANSIT"
      },
      "response": []
    },
    {
      "name": "Carrier - Update ECMR status to Delivered",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;"
            ]
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-access-token",
            "value": "{{carrierMemberToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n      \"ecmrID\": \"B1234567890\",\n      \"status\": \"DELIVERED\",\n      \"creation\": {\n        \"address\": {\n          \"name\": \"Amsterdam Compound\",\n          \"street\": \"compenstraat\",\n          \"houseNumber\": \"21\",\n          \"city\": \"Assen\",\n          \"zipCode\": \"9976ZH\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 43.1927,\n          \"longitude\": 23.3249\n        },\n        \"date\": 1502402400000\n      },\n      \"loading\": {\n        \"address\": {\n          \"name\": \"Amsterdam Compound\",\n          \"street\": \"compenstraat\",\n          \"houseNumber\": \"21\",\n          \"city\": \"Amsterdam Zuid\",\n          \"zipCode\": \"9976ZH\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 43.1927,\n          \"longitude\": 23.3249\n        },\n        \"date\": 1502402400000\n      },\n      \"delivery\": {\n        \"address\": {\n          \"name\": \"Rob Carman\",\n          \"street\": \"autostraat\",\n          \"houseNumber\": \"12\",\n          \"city\": \"Rotterdam\",\n          \"zipCode\": \"9442KO\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 51.4443,\n          \"longitude\": 60.3323\n        },\n        \"date\": 1502488800000\n      },\n      \"owner\": \"leaseplan\",\n      \"source\": \"amsterdamcompound\",\n      \"transporter\": \"james@koopman.org\",\n      \"carrier\": \"koopman\",\n      \"recipientOrg\": \"cardealer\",\n      \"recipient\": \"rob@cardealer.org\",\n      \"issueDate\": 0,\n      \"issuedBy\": \"koopman\",\n      \"carrierComments\": \"No comments\",\n      \"documents\": [\n        \"doc1\"\n      ],\n      \"goods\": [\n        {\n          \"vehicle\": {\n            \"vin\": \"183726339N\",\n            \"manufacturer\": \"Audi\",\n            \"model\": \"A1\",\n            \"type\": \"sportback\",\n            \"ecmrs\": [],\n            \"odoMeterReading\": 0,\n            \"plateNumber\": \"AV198RX\"\n          },\n          \"description\": \"vehicle\",\n          \"weight\": 1500,\n          \"compoundRemark\": {\n          \t\"isDamaged\": true,\n          \t\"comments\": \"broken windowr\"\n          },\n          \"carrierLoadingRemark\": {\n          \t\"isDamaged\": false,\n          \t\"comments\": \"The car has no window\"\n          },\n          \"carrierDeliveryRemark\": {\n          \t\"isDamaged\": true,\n          \t\"comments\": \"Accidentally broke the lights\"\n          }\n        },\n        {\n          \"vehicle\": {\n            \"vin\": \"736182CHD28172\",\n            \"manufacturer\": \"Mercedes\",\n            \"model\": \"SLK\",\n            \"type\": \"Station\",\n            \"ecmrs\": [],\n            \"odoMeterReading\": 0,\n            \"plateNumber\": \"I827YE\"\n          },\n          \"description\": \"vehicle\",\n          \"weight\": 1800,\n          \"compoundRemark\": {\n          \t\"isDamaged\": false,\n          \t\"comments\": \"wrong color\"\n          },\n          \"carrierLoadingRemark\": {\n          \t\"isDamaged\": false,\n          \t\"comments\": \"it is a nice blue\"\n          },\n          \"carrierDeliveryRemark\": {\n          \t\"isDamaged\": true,\n          \t\"comments\": \"Accidentally destroyed the car\"\n          }\n        }\n      ],\n      \"legalOwnerInstructions\": \"string\",\n      \"paymentInstructions\": \"string\",\n      \"payOnDelivery\": \"string\",\n      \"compoundSignature\": {\n      \t\"certificate\": \"willem@amsterdamcompound.org\",\n      \t\"timestamp\": 0,\n      \t\"generalRemark\": {\n      \t\t\"comments\": \"some general comments\"\n      \t}\n      },\n      \"carrierLoadingSignature\": {\n      \t\"certificate\": \"harry@koopman.org\",\n      \t\"timestamp\": 0,\n      \t\"generalRemark\": {\n      \t\t\"comments\": \"some general comments\"\n      \t\t}\n      \t},\n      \t\"carrierDeliverySignature\": {\n      \t\"certificate\": \"harry@koopman.org\",\n      \t\"timestamp\": 0,\n      \t\"generalRemark\": {\n      \t\t\"comments\": \"delivered\"\n      \t\t}\n      \t}\n    }"
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/ECMR/",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "ECMR",
            ""
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Recipient Admin - Login",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "var jsonData = JSON.parse(responseBody);",
              "",
              "postman.setEnvironmentVariable(\"recipientToken\", jsonData.token);",
              "",
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "tests[\"Authentication succuessful\"] = jsonData.success === true;",
              "console.log(jsonData.user);",
              "tests[\"Correct user\"] = jsonData.user[\"username\"] === \"rob@cardealer.org\";"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\" : \"rob@cardealer.org\",\n  \"password\" : \"passw0rd\"\n}"
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/login",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "login"
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Recipient - Cannot create ECMR",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 500\"] = responseCode.code === 500;",
              "",
              "// var jsonData = JSON.parse(responseBody);",
              "",
              "// postman.setEnvironmentVariable(\"ecmrID\", jsonData[0].ecmrID);"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-access-token",
            "value": "{{recipientToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n      \"ecmrID\": \"BUUEW23727327\",\n      \"status\": \"CREATED\",\n      \"creation\": {\n        \"address\": {\n          \"name\": \"Amsterdam Compound\",\n          \"street\": \"compenstraat\",\n          \"houseNumber\": \"21\",\n          \"city\": \"Assen\",\n          \"zipCode\": \"9976ZH\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 43.1927,\n          \"longitude\": 23.3249\n        },\n        \"date\": 1502402400000\n      },\n      \"loading\": {\n        \"address\": {\n          \"name\": \"Amsterdam Compound\",\n          \"street\": \"compenstraat\",\n          \"houseNumber\": \"21\",\n          \"city\": \"Amsterdam Zuid\",\n          \"zipCode\": \"9976ZH\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 43.1927,\n          \"longitude\": 23.3249\n        },\n        \"date\": 1502402400000\n      },\n      \"delivery\": {\n        \"address\": {\n          \"name\": \"Rob Carman\",\n          \"street\": \"autostraat\",\n          \"houseNumber\": \"12\",\n          \"city\": \"Rotterdam\",\n          \"zipCode\": \"9442KO\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 51.4443,\n          \"longitude\": 60.3323\n        },\n        \"date\": 1502488800000\n      },\n      \"owner\": \"leaseplan\",\n      \"source\": \"amsterdamcompound\",\n      \"transporter\": \"james@koopman.org\",\n      \"carrier\": \"asdf\",\n      \"recipientOrg\": \"cardealer\",\n      \"recipient\": \"rob@cardealer.org\",\n      \"issueDate\": 0,\n      \"issuedBy\": \"koopman\",\n      \"carrierComments\": \"No comments\",\n      \"documents\": [\n        \"doc1\"\n      ],\n      \"goods\": [\n        {\n          \"vehicle\": {\n            \"vin\": \"183726339N\",\n            \"manufacturer\": \"Audi\",\n            \"model\": \"A1\",\n            \"type\": \"sportback\",\n            \"ecmrs\": [],\n            \"odoMeterReading\": 0,\n            \"plateNumber\": \"AV198RX\"\n          },\n          \"description\": \"vehicle\",\n          \"weight\": 1500\n        },\n        {\n          \"vehicle\": {\n            \"vin\": \"736182CHD28172\",\n            \"manufacturer\": \"Mercedes\",\n            \"model\": \"SLK\",\n            \"type\": \"Station\",\n            \"ecmrs\": [],\n            \"odoMeterReading\": 0,\n            \"plateNumber\": \"I827YE\"\n          },\n          \"description\": \"vehicle\",\n          \"weight\": 1800\n        }\n      ],\n      \"legalOwnerInstructions\": \"string\",\n      \"paymentInstructions\": \"string\",\n      \"payOnDelivery\": \"string\"\n    }"
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/ECMR/",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "ECMR",
            ""
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Recipient - GET ECMR",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "var jsonData = JSON.parse(responseBody);",
              "if (jsonData.length > 0) {",
              "    tests[\"is of type ecmr\"] = (jsonData[0].ecmrID !== null && jsonData[0].ecmrID !== undefined);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "x-access-token",
            "value": "{{recipientToken}}"
          }
        ],
        "body": {},
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/ECMR/",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "ECMR",
            ""
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Recipient - GET ECMR by ID",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "var jsonData = JSON.parse(responseBody);",
              "console.log(jsonData);",
              "if (jsonData) {",
              "    tests[\"is of type ecmr\"] = (jsonData.ecmrID !== null && jsonData.ecmrID !== undefined);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "x-access-token",
            "value": "{{recipientToken}}"
          }
        ],
        "body": {},
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/ECMR/ecmrID/A1234567890",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "ECMR",
            "ecmrID",
            "A1234567890"
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Recipient - Get all Vehicles",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "var jsonData = JSON.parse(responseBody);",
              "console.log(jsonData);",
              "if (jsonData.length > 0) {",
              "    tests[\"is of type vehicle\"] = (jsonData[0].vin !== null && jsonData[0].vin !== undefined);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-access-token",
            "value": "{{recipientToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/vehicle/",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "vehicle",
            ""
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Recipient - Get Vehicle by VIN",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "// var jsonData = JSON.parse(responseBody);",
              "// if (jsonData.length > 0) {",
              "//     tests[\"is of type ecmr\"] = (jsonData[0].ecmrID !== null && jsonData[0].ecmrID !== undefined);",
              "// }"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-access-token",
            "value": "{{recipientToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/vehicle/vin/{{vinNumber}}",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "vehicle",
            "vin",
            "{{vinNumber}}"
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "Recipient - Update ECMR status to confirmed_delivered",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Updated ECMR status to confirmed_delivered. Status code is 200\"] = responseCode.code === 200;"
            ]
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-access-token",
            "value": "{{recipientToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n      \"ecmrID\": \"B1234567890\",\n      \"status\": \"CONFIRMED_DELIVERED\",\n      \"creation\": {\n        \"address\": {\n          \"name\": \"Amsterdam Compound\",\n          \"street\": \"compenstraat\",\n          \"houseNumber\": \"21\",\n          \"city\": \"Assen\",\n          \"zipCode\": \"9976ZH\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 43.1927,\n          \"longitude\": 23.3249\n        },\n        \"date\": 1502402400000\n      },\n      \"loading\": {\n        \"address\": {\n          \"name\": \"Amsterdam Compound\",\n          \"street\": \"compenstraat\",\n          \"houseNumber\": \"21\",\n          \"city\": \"Amsterdam Zuid\",\n          \"zipCode\": \"9976ZH\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 43.1927,\n          \"longitude\": 23.3249\n        },\n        \"date\": 1502402400000\n      },\n      \"delivery\": {\n        \"address\": {\n          \"name\": \"Rob Carman\",\n          \"street\": \"autostraat\",\n          \"houseNumber\": \"12\",\n          \"city\": \"Rotterdam\",\n          \"zipCode\": \"9442KO\",\n          \"country\": \"Netherlands\",\n          \"latitude\": 51.4443,\n          \"longitude\": 60.3323\n        },\n        \"date\": 1502488800000\n      },\n      \"owner\": \"leaseplan\",\n      \"source\": \"amsterdamcompound\",\n      \"transporter\": \"james@koopman.org\",\n      \"carrier\": \"koopman\",\n      \"recipientOrg\": \"cardealer\",\n      \"recipient\": \"rob@cardealer.org\",\n      \"issueDate\": 0,\n      \"issuedBy\": \"koopman\",\n      \"carrierComments\": \"No comments\",\n      \"documents\": [\n        \"doc1\"\n      ],\n      \"goods\": [\n        {\n          \"vehicle\": {\n            \"vin\": \"183726339N\",\n            \"manufacturer\": \"Audi\",\n            \"model\": \"A1\",\n            \"type\": \"sportback\",\n            \"ecmrs\": [],\n            \"odoMeterReading\": 0,\n            \"plateNumber\": \"AV198RX\"\n          },\n          \"description\": \"vehicle\",\n          \"weight\": 1500,\n          \"compoundRemark\": {\n          \t\"isDamaged\": true,\n          \t\"comments\": \"broken windowr\"\n          },\n          \"carrierLoadingRemark\": {\n          \t\"isDamaged\": false,\n          \t\"comments\": \"The car has no window\"\n          },\n          \"carrierDeliveryRemark\": {\n          \t\"isDamaged\": true,\n          \t\"comments\": \"Accidentally broke the lights\"\n          },\n          \"recipientRemark\": {\n          \t\"isDamaged\": true,\n          \t\"comments\": \"Received with broken lights\"\n          }\n        },\n        {\n          \"vehicle\": {\n            \"vin\": \"736182CHD28172\",\n            \"manufacturer\": \"Mercedes\",\n            \"model\": \"SLK\",\n            \"type\": \"Station\",\n            \"ecmrs\": [],\n            \"odoMeterReading\": 0,\n            \"plateNumber\": \"I827YE\"\n          },\n          \"compoundRemark\": {\n          \t\"isDamaged\": false,\n          \t\"comments\": \"wrong color\"\n          },\n          \"carrierLoadingRemark\": {\n          \t\"isDamaged\": false,\n          \t\"comments\": \"it is a nice blue\"\n          },\n          \"carrierDeliveryRemark\": {\n          \t\"isDamaged\": true,\n          \t\"comments\": \"Accidentally destroyed the car\"\n          },\n          \"recipientRemark\": {\n          \t\"isDamaged\": true,\n          \t\"comments\": \"Received a destroyed car\"\n          },\n          \"description\": \"vehicle\",\n          \"weight\": 1800\n        }\n      ],\n      \"legalOwnerInstructions\": \"string\",\n      \"paymentInstructions\": \"string\",\n      \"payOnDelivery\": \"string\",\n      \"compoundSignature\": {\n      \t\"certificate\": \"willem@amsterdamcompound.org\",\n      \t\"timestamp\": 0,\n      \t\"generalRemark\": {\n      \t\t\"comments\": \"some general comments\"\n      \t}\n      },\n      \"carrierLoadingSignature\": {\n      \t\"certificate\": \"harry@koopman.org\",\n      \t\"timestamp\": 0,\n      \t\"generalRemark\": {\n      \t\t\"comments\": \"some general comments\"\n      \t\t}\n      \t},\n      \t\"carrierDeliverySignature\": {\n      \t\"certificate\": \"harry@koopman.org\",\n      \t\"timestamp\": 0,\n      \t\"generalRemark\": {\n      \t\t\"comments\": \"delivered\"\n      \t\t}\n      \t},\n      \t\"recipientSignature\": {\n      \t\"certificate\": \"rob@cardealer.org\",\n      \t\"timestamp\": 0,\n      \t\"generalRemark\": {\n      \t\t\"comments\": \"confirmed delivered\"\n      \t\t}\n      \t}\n    }"
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/ECMR/",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "ECMR",
            ""
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "GET Compound",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-access-token",
            "value": "{{legalOwnerToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/organization/compound/",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "organization",
            "compound",
            ""
          ]
        },
        "description": ""
      },
      "response": []
    },
    {
      "name": "GET Legal Owner",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-access-token",
            "value": "{{legalOwnerToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{localhost}}{{clientPort}}/api/v1/participant/legalowner/admin/",
          "host": [
            "{{localhost}}{{clientPort}}"
          ],
          "path": [
            "api",
            "v1",
            "participant",
            "legalowner",
            "admin",
            ""
          ]
        },
        "description": ""
      },
      "response": []
    }
  ]
}