apiVersion: batch/v1
kind: Job
metadata:
  name: "{{.Release.Name}}-deploy-bna"
  labels:
    app: "deploy-bna"
    chart: "deploy-bna-job"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
    helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    "helm.sh/hook": "post-install"
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{.Release.Name}}"
      labels:
        app: "deploy-bna"
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        app.kubernetes.io/managed-by: {{.Release.Service | quote }}
        app.kubernetes.io/instance: {{.Release.Name | quote }}
        helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    spec:
      restartPolicy: Never
      containers:
      - name: deploy-bna
        image: "{{ .Values.composerimage.repository }}:{{ .Values.composerimage.tag }}"
        command: ["sh", "-c","composer identity import -p {{ .Values.global.org.name }} -u admin -c /fabric-config/msp/signcerts/Admin@{{ .Values.global.org.name }}-cert.pem -k /fabric-config/msp/keystore/`ls /fabric-config/msp/keystore` && echo 'Done with importing identity'; composer network deploy -a /fabric-config/digital-cmr-network.bna -i admin -s passwd -p {{ .Values.global.org.name }} && echo 'Done with deploying'"]
        envFrom:
          - configMapRef:
              name: deploy-bna-config
        volumeMounts:
        - name: deploy-bna-config
          mountPath: /fabric-config/
        - mountPath: /home
          name: kpm-all-composer-credentials
      volumes:
      - name: kpm-all-composer-credentials
        hostPath:
          path: /composer
      - name: deploy-bna-config
        secret:
          secretName: deploy-bna-config
          items:
{{- include "secret.users.index" . | indent 10}}


