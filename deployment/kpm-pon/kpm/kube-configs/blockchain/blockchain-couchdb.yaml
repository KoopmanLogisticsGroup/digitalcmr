---
#apiVersion: v1
#kind: Pod
#metadata:
#  name: utils
#spec:
#  restartPolicy: "Never"
#  volumes:
#  - name: dockersocket
#    hostPath:
#      path: /var/run/docker.sock
#  - name: composer-credentials
#    hostPath:
#      path: /composer
#---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: blockchain-orderer-kpm-pon
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: orderer-kpm-pon
    spec:
      containers:
      - name: orderer-kpm-pon
        image: ibmblockchain/fabric-orderer:1.0.6
        command: ["sh", "-c", "sleep 5 && while [ ! -f /fabric-config/crypto-config/ordererOrganizations/orderers/ ]; do echo Waiting for crypto to be loaded; sleep 1; done; orderer"]
        env:
        - name: ORDERER_CFG_PATH
          value: /fabric-config
        - name: ORDERER_GENERAL_LEDGERTYPE
          value: file
        - name: ORDERER_FILELEDGER_LOCATION
          value: /mnt/ledger/orderer1
        - name: ORDERER_GENERAL_BATCHTIMEOUT
          value: 1s
        - name: ORDERER_GENERAL_BATCHSIZE_MAXMESSAGECOUNT
          value: "10"
        - name: ORDERER_GENERAL_MAXWINDOWSIZE
          value: "1000"
        - name: ORDERER_GENERAL_ORDERERTYPE
          value: solo
        - name: ORDERER_GENERAL_LISTENADDRESS
          value: 0.0.0.0
        - name: ORDERER_GENERAL_LISTENPORT
          value: "31010"
        - name: ORDERER_GENERAL_LOGLEVEL
          value: debug
        - name: ORDERER_GENERAL_LOCALMSPDIR
          value: /fabric-config/crypto-config/ordererOrganizations/orderers/orderer.kpm-pon/msp
        - name: ORDERER_GENERAL_LOCALMSPID
          value: OrdererMSP
        - name: ORDERER_GENERAL_GENESISMETHOD
          value: file
        - name: ORDERER_GENERAL_GENESISFILE
          value: /fabric-config/composer-genesis.block
        - name: ORDERER_GENERAL_GENESISPROFILE
          value: initial
        - name: ORDERER_GENERAL_TLS_ENABLED
          value: "false"
        - name: GODEBUG
          value: "netdns=go"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: blockchain-cakpm-pon
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: ca-kpm-pon
    spec:
      containers:
      - name: ca-kpm-pon
        image: ibmblockchain/fabric-ca:1.0.6
        command: ["sh", "-c", "sleep 1 && while [ ! -f /fabric-config/crypto-config/ ]; do echo Waiting for crypto config to be loaded; sleep 1; done; fabric-ca-server start -c ${CONFIGYAML}"]
        env:
        - name: CONFIGYAML
          value: /shared/cas/ca.yaml
        - name: FABRIC_CA_SERVER_CA_CERTFILE
          value: /fabric-config/crypto-config/ordererOrganizations/ca/ca.kpm-pon-cert.pem
        - name: FABRIC_CA_SERVER_CA_KEYFILE
          value: /fabric-config/crypto-config/ordererOrganizations/ca/b76ef2f0d4df95adec8501a85b09df153dd1d36c9982c98936b1878a28be321c_sk
        - name: FABRIC_CA_SERVER_DEBUG
          value: "true"
        - name: FABRIC_CA_SERVER_TLS_ENABLED
          value: "false"
        - name: FABRIC_CA_SERVER_TLS_CERTFILE
          value: /certs/ca0a-cert.pem
        - name: FABRIC_CA_SERVER_TLS_KEYFILE
          value: /certs/ca0a-key.pem
        - name: GODEBUG
          value: "netdns=go"
---
kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
    name: blockchain-peer0-kpm-pon
spec:
    serviceName: blockchain-peer0-kpm-pon
    replicas: 1
    template:
        metadata:
            labels:
                tier: peer0-kpm-pon
                vol: peer0-kpm-pon-pv
        spec:
            terminationGracePeriodSeconds: 10
            volumes:
            - name: dockersocket
              hostPath:
                path: /var/run/docker.sock
            containers:
                - name: peer0-kpm-pon
                  image: ibmblockchain/fabric-peer:1.0.6
                  imagePullPolicy: Always
                  command: ["sh", "-c", "sleep 1 && while [ ! -f /fabric-config/crypto-config/ ]; do echo Waiting for crypto config to be loaded; sleep 1; done; peer node start --peer-defaultchain=false"]
                  env:
                  - name: CORE_PEER_ADDRESSAUTODETECT
                    value: "true"
                  - name: CORE_PEER_NETWORKID
                    value: nid1
                  - name: CORE_PEER_ADDRESS
                    value: blockchain-peer0-kpm-pon:5010
                  - name: CORE_PEER_LISTENADDRESS
                    value: 0.0.0.0:5010
                  - name: CORE_PEER_EVENTS_ADDRESS
                    value: 0.0.0.0:5011
                  - name: CORE_PEER_GOSSIP_BOOTSTRAP
                    value: blockchain-peer0-kpm-pon:5010
                  - name: CORE_PEER_GOSSIP_ORGLEADER
                    value: "true"
                  - name: CORE_PEER_GOSSIP_SKIPHANDSHAKE
                    value: "true"
                  - name: CORE_PEER_COMMITTER_ENABLED
                    value: "true"
                  - name: CORE_PEER_PROFILE_ENABLED
                    value: "true"
                  - name: CORE_PEER_DISCOVERY_PERIOD
                    value: 60s
                  - name: CORE_PEER_DISCOVERY_TOUCHPERIOD
                    value: 60s
                  - name: CORE_VM_ENDPOINT
                    value: unix:///host/var/run/docker.sock
                  - name: CORE_PEER_LOCALMSPID
                    value: kpm-ponMSP
                  - name: CORE_PEER_MSPCONFIGPATH
                    value: /fabric-config/crypto-config/peerOrganizations/peers/peer0.kpm-pon/msp
                  - name: CORE_LOGGING_LEVEL
                    value: debug
                  - name: CORE_LOGGING_PEER
                    value: debug
                  - name: CORE_LOGGING_CAUTHDSL
                    value: debug
                  - name: CORE_LOGGING_GOSSIP
                    value: debug
                  - name: CORE_LOGGING_LEDGER
                    value: debug
                  - name: CORE_LOGGING_MSP
                    value: info
                  - name: CORE_LOGGING_POLICIES
                    value: debug
                  - name: CORE_LOGGING_GRPC
                    value: debug
                  - name: CORE_PEER_TLS_ENABLED
                    value: "false"
                  - name: CORE_LEDGER_STATE_STATEDATABASE
                    # value: goleveldb
                    value: CouchDB
                  - name: CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS
                    value: blockchain-peer0-kpm-pon-couchdb:5984
                  - name: PEER_CFG_PATH
                    value: /fabric-config/crypto-config/peerOrganizations/peers/peer0.kpm-pon
#                    value: peer_config/
# TODO:  not sure what to do here...
                  - name: FABRIC_CFG_PATH
                    value: /fabric-config/
                  - name: ORDERER_URL
                    value: blockchain-orderer-kpm-pon:31010
                  - name: GODEBUG
                    value: "netdns=go"
                  volumeMounts:
                    - name: dockersocket
                      mountPath: /host/var/run/docker.sock
                    - name: peer0-kpm-pon-pv
                      mountPath: /var/hyperledger/production
    volumeClaimTemplates:
        - metadata:
            name: peer0-kpm-pon-pv
          spec:
              accessModes:
                  - ReadWriteOnce
              resources:
                  requests:
                      storage: 1G
              selector:
                matchLabels:
                  vol: peer0-kpm-pon-pv
              storageClassName: ""
---
kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
    name: blockchain-peer0-kpm-pon-couchdb
spec:
    serviceName: blockchain-peer0-kpm-pon-couchdb
    replicas: 1
    template:
        metadata:
            labels:
                tier: peer0-kpm-pon-couchdb
                vol: bc-peer0-kpm-pon-couchdb-pv
        spec:
            terminationGracePeriodSeconds: 10
            containers:
                - name: blockchain-peer0-kpm-pon-couchdb
                  image: ibmblockchain/fabric-couchdb:1.0.6
                  env:
                  - name: DB_URL
                    value: http://localhost:5984/member_db
                  volumeMounts:
                    - name: bc-peer0-kpm-pon-couchdb-pv
                      mountPath: /opt/couchdb/data
    volumeClaimTemplates:
        - metadata:
            name: bc-peer0-kpm-pon-couchdb-pv
          spec:
              accessModes:
                  - ReadWriteOnce
              resources:
                  requests:
                      storage: 1G
              selector:
                matchLabels:
                  vol: bc-peer0-kpm-pon-couchdb-pv
              storageClassName: ""