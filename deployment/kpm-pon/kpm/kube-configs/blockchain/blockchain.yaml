---
apiVersion: v1
kind: Pod
metadata:
  name: utils
spec:
  restartPolicy: "Never"
  volumes:
  - name: shared
    hostPath:
      path: /tmp
  - name: dockersocket
    hostPath:
      path: /var/run/docker.sock
  - name: composer-credentials
    hostPath:
      path: /composer
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: blockchain-orderer
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: orderer
    spec:
      volumes:
      - name: shared
        hostPath:
          path: /tmp

      containers:
      - name: orderer
        image: ibmblockchain/fabric-orderer:1.0.6
        command: ["sh", "-c", "sleep 5 && while [ ! -f /shared/bootstrapped ]; do echo Waiting for bootstrap; sleep 1; done; orderer"]
        env:
        - name: ORDERER_CFG_PATH
          value: /shared/
        - name: ORDERER_GENERAL_LEDGERTYPE
          value: file
        - name: ORDERER_FILELEDGER_LOCATION
          value: /mnt/ledger/orderer1
        - name: ORDERER_GENERAL_BATCHTIMEOUT
          value: 1s
        - name: ORDERER_GENERAL_BATCHSIZE_MAXMESSAGECOUNT
          value: "10"
        - name: ORDERER_GENERAL_MAXWINDOWSIZE
          value: "1000"
        - name: ORDERER_GENERAL_ORDERERTYPE
          value: solo
        - name: ORDERER_GENERAL_LISTENADDRESS
          value: 0.0.0.0
        - name: ORDERER_GENERAL_LISTENPORT
          value: "31010"
        - name: ORDERER_GENERAL_LOGLEVEL
          value: debug
        - name: ORDERER_GENERAL_LOCALMSPDIR
          value: /shared/crypto-config/ordererOrganizations/kpm-pon/orderers/orderer.kpm-pon/msp
        - name: ORDERER_GENERAL_LOCALMSPID
          value: OrdererMSP
        - name: ORDERER_GENERAL_GENESISMETHOD
          value: file
        - name: ORDERER_GENERAL_GENESISFILE
          value: /shared/composer-genesis.block
        - name: ORDERER_GENERAL_GENESISPROFILE
          value: initial
        - name: ORDERER_GENERAL_TLS_ENABLED
          value: "false"
        - name: GODEBUG
          value: "netdns=go"
        volumeMounts:
        - mountPath: /shared
          name: shared

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: blockchain-kpm-ponca
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: kpm-ponca
    spec:
      volumes:
      - name: shared
        hostPath:
          path: /tmp

      containers:
      - name: kpm-ponca
        image: ibmblockchain/fabric-ca:1.0.6
        command: ["sh", "-c", "sleep 1 && while [ ! -f /shared/bootstrapped ]; do echo Waiting for bootstrap; sleep 1; done; fabric-ca-server start -c ${CONFIGYAML}"]
        env:
        - name: CONFIGYAML
          value: /shared/cas/ca.yaml
        - name: FABRIC_CA_SERVER_CA_CERTFILE
          value: /shared/crypto-config/ordererOrganizations/kpm-pon/ca/ca.kpm-pon-cert.pem
        - name: FABRIC_CA_SERVER_CA_KEYFILE
          value: /mnt/crypto-config/ordererOrganizations/kpm-pon/ca/cc4c3c99e0fffc2e459930c72596911e40674b13af6bd03b2353219c3ab20529_sk
        - name: FABRIC_CA_SERVER_DEBUG
          value: "true"
        - name: FABRIC_CA_SERVER_TLS_ENABLED
          value: "false"
        - name: FABRIC_CA_SERVER_TLS_CERTFILE
          value: /certs/ca0a-cert.pem
        - name: FABRIC_CA_SERVER_TLS_KEYFILE
          value: /certs/ca0a-key.pem
        - name: GODEBUG
          value: "netdns=go"
        volumeMounts:
        - mountPath: /shared
          name: shared

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: blockchain-kpm-ponpeer
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: kpm-ponpeer
    spec:
      volumes:
      - name: shared
        hostPath:
          path: /tmp
      - name: dockersocket
        hostPath:
          path: /var/run/docker.sock

      containers:
      - name: kpm-ponpeer
        image: ibmblockchain/fabric-peer:1.0.6
        command: ["sh", "-c", "sleep 1 && while [ ! -f /shared/bootstrapped ]; do echo Waiting for bootstrap; sleep 1; done; peer node start --peer-defaultchain=false"]
        env:
        - name: CORE_PEER_ADDRESSAUTODETECT
          value: "true"
        - name: CORE_PEER_NETWORKID
          value: nid1
        - name: CORE_PEER_ADDRESS
          value: blockchain-kpm-ponpeer:5010
        - name: CORE_PEER_LISTENADDRESS
          value: 0.0.0.0:5010
        - name: CORE_PEER_EVENTS_ADDRESS
          value: 0.0.0.0:5011
        - name: CORE_PEER_GOSSIP_BOOTSTRAP
          value: blockchain-kpm-ponpeer:5010
        - name: CORE_PEER_GOSSIP_ORGLEADER
          value: "true"
        - name: CORE_PEER_GOSSIP_SKIPHANDSHAKE
          value: "true"
        - name: CORE_PEER_COMMITTER_ENABLED
          value: "true"
        - name: CORE_PEER_PROFILE_ENABLED
          value: "true"
        - name: CORE_PEER_DISCOVERY_PERIOD
          value: 60s
        - name: CORE_PEER_DISCOVERY_TOUCHPERIOD
          value: 60s
        - name: CORE_VM_ENDPOINT
          value: unix:///host/var/run/docker.sock
        - name: CORE_PEER_LOCALMSPID
          value: kpm-ponMSP
        - name: CORE_PEER_MSPCONFIGPATH
          value: /shared/crypto-config/peerOrganizations/kpm-pon/peers/peer0.kpm-pon/msp/
        - name: CORE_LOGGING_LEVEL
          value: debug
        - name: CORE_LOGGING_PEER
          value: debug
        - name: CORE_LOGGING_CAUTHDSL
          value: debug
        - name: CORE_LOGGING_GOSSIP
          value: debug
        - name: CORE_LOGGING_LEDGER
          value: debug
        - name: CORE_LOGGING_MSP
          value: info
        - name: CORE_LOGGING_POLICIES
          value: debug
        - name: CORE_LOGGING_GRPC
          value: debug
        - name: CORE_PEER_TLS_ENABLED
          value: "false"
        - name: CORE_LEDGER_STATE_STATEDATABASE
          value: goleveldb
        - name: PEER_CFG_PATH
          value: peer_config/
        - name: FABRIC_CFG_PATH
          value: /etc/hyperledger/fabric/
        - name: ORDERER_URL
          value: blockchain-orderer:31010
        - name: GODEBUG
          value: "netdns=go"
        volumeMounts:
        - mountPath: /shared
          name: shared
        - mountPath: /host/var/run/docker.sock
          name: dockersocket
