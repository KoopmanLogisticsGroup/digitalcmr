version: '2.0'
services:
  ca.example.com:
    extends:
      file: composer/hlfv1/composer/docker-compose.yml
      service: ca.example.com
  orderer.example.com:
    extends:
      file: composer/hlfv1/composer/docker-compose.yml
      service: orderer.example.com
  peer0.org1.example.com:
    extends:
      file: composer/hlfv1/composer/docker-compose.yml
      service: peer0.org1.example.com
    depends_on:
      - orderer.example.com
    environment:
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=digitalcmr_default

  util:
    image: docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - peer0.org1.example.com
    command: >
      sh -c " \
        set -e; \
        sleep 10; \
        docker exec -e \"CORE_PEER_LOCALMSPID=Org1MSP\" -e \"CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/Admin@org1.example.com\" peer0.org1.example.com peer channel create -o orderer.example.com:7050 -c mychannel -f /etc/hyperledger/configtx/mychannel.tx; \
        docker exec -e \"CORE_PEER_LOCALMSPID=Org1MSP\" -e \"CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/Admin@org1.example.com\" peer0.org1.example.com peer channel join -b mychannel.block && \
        echo 'Created channels! Exiting.'"

  couchdb:
    extends:
      file: composer/hlfv1/composer/docker-compose.yml
      service: couchdb

  composer:
    build: composer
    ports:
      - 3000:3000
    environment:
      - COMPOSER_WAIT_TIME=0
    volumes:
      - ./composer/bna:/bna
      - ./composer/hlfv1/composer/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com:/admin-crypto
      - ./composer/connection.json:/root/.composer-connection-profiles/defaultProfile/connection.json
    depends_on:
      - orderer.example.com
      - peer0.org1.example.com
      - couchdb
    env_file: ./composer/.env

  server:
    build:
      context: server
      args:
        NPM_TOKEN: ${NPM_TOKEN}
    ports:
      - 8080:8080
    env_file: ./server/.env
    environment:
      - NPM_TOKEN=${NPM_TOKEN}
    volumes:
      - ./server/src:/usr/src/app/src
      - ./server/tsconfig.json:/usr/src/app/tsconfig.json # TS filenames get added automatically to this file on build
      - ./server/package.json:/usr/src/app/package.json
#    links:
#      - composer
    command: bash -c "grunt"
